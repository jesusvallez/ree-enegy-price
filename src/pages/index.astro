---
import EnergyTable from '~/components/EnergyTable.astro'
import Footer from '~/components/Footer.astro'
import LightSchedule from '~/components/LightSchedule.astro'
import Loader from '~/components/Loader.astro'
import SwitchControl from '~/components/SwitchControl.astro'
import Layout from '~/layouts/Layout.astro'
---

<Layout>
  <main class="flex-auto">
    <section class="body-font text-zinc-800 dark:text-zinc-100">
      <div class="container mx-auto px-4 py-16">
        <div class="mx-auto flex max-w-2xl flex-col lg:max-w-6xl">
          <header class="max-w-2xl">
            <h1 class="text-4xl font-bold tracking-tight sm:text-5xl">Precio de la luz ðŸ’¡</h1>

            <p class="text-base text-zinc-600 dark:text-zinc-400">
              Conoce el precio de la luz en tiempo real en EspaÃ±a. Datos proporcionados por <a
                href="https://www.esios.ree.es/es"
                target="_blank"
                rel="noopener noreferrer"
                class="text-blue-600 underline dark:text-blue-300">REE</a
              >.
            </p>
            <p class="text-base text-zinc-600 dark:text-zinc-400">
              Los precios se actualizan cada hora. Los precios mostrados son en â‚¬/kWh.
            </p>
          </header>

          <LightSchedule>
            <SwitchControl
              id="switch-control"
              label="Precio para maÃ±ana"
              description="Activa esta opciÃ³n si quieres saber el precio de la electricidad para maÃ±ana."
              defaultHidden={true}
            />
          </LightSchedule>

          <div class="mt-4 flex h-[355px] items-center justify-center" id="chart">
            <Loader id="chart-loader" loaderSize={24} srText="Cargando grÃ¡fico de precios..." />
          </div>

          <EnergyTable tableId="table" headers={['Hora', 'Precio', 'Diferencia']} />
          <Footer />
        </div>
      </div>
    </section>
  </main>
</Layout>

<script>
  import type { REE } from '~/@types'
  import { generateURL, getPrices } from '~/helpers'
  import { generateAnnotations, generateChartConfig, generateChartData, getColors } from '~/helpers/chart-generator'
  import { addEventListenerDarkModeSwitch, addEventListenerTomorrowSwitch } from '~/helpers/events-listeners'
  import { generateTableConfig } from '~/helpers/table-generator'

  const $ = document.querySelector.bind(document)

  const CHART = $('#chart')
  const CHART_LOADER = $('#chart-loader')
  const TABLE = $('#table')
  const SWITCH = $('#switch-control')

  const apiUrl = generateURL()
  const data: REE | null = await fetch(apiUrl)
    .then((response) => response.json())
    .catch((error) => {
      console.error('Error fetching data', error)
      return null
    })

  if (data) {
    const { prices, tomorrowPrices } = getPrices(data)
    const hasTomorrowPrices = tomorrowPrices.length > 0

    if (hasTomorrowPrices && SWITCH) {
      SWITCH.removeAttribute('style')
    }

    const darkMode = window.matchMedia('(prefers-color-scheme: dark)').matches
    const lightColors = getColors({ darkMode: false })
    const darkColors = getColors({ darkMode: true })

    const todayData = generateChartData(prices)
    const tomorrowData = generateChartData(tomorrowPrices)
    const colors = darkMode ? darkColors : lightColors

    const { xAxis, yAxis } = generateAnnotations({ avgPrice: todayData.avgPrice, colors })
    const todayChartConfig = generateChartConfig({ ...todayData, colors })

    const { default: ApexCharts } = await import('apexcharts')
    const chart = new ApexCharts(CHART, todayChartConfig)

    chart.render().then(() => {
      chart.addXaxisAnnotation(xAxis)
      chart.addYaxisAnnotation(yAxis)

      if (CHART_LOADER) {
        CHART_LOADER.remove()

        if (TABLE) {
          const tBody = generateTableConfig(prices, true)
          TABLE.innerHTML = tBody.innerHTML
        }
      }
    })

    addEventListenerDarkModeSwitch(SWITCH, chart, todayData, tomorrowData, lightColors, darkColors)
    addEventListenerTomorrowSwitch(SWITCH, TABLE, chart, todayData, tomorrowData, lightColors, darkColors)
  }
</script>
